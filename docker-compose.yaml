version: "3"
services:
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=172.17.10.24
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://192.168.155.19:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kui.yaml:/etc/kafkaui/dynamic_config.yaml
  postgres:
    container_name: postgres
    image: postgres:13.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: tracker
      POSTGRES_PASSWORD: tracker
      POSTGRES_DB: tracker
    volumes:
      - postgres-data:/var/lib/postgresql/data
  postgres-consumer:
    container_name: postgres-consumer
    build:
      context: ./postgres-consumer
      dockerfile: Dockerfile
    environment:
      CONS_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONS_KAFKA_TOPIC: gps
      CONS_KAFKA_GROUP: gps-consumer
      CONS_POSTGRES_HOST: postgres
      CONS_POSTGRES_PORT: 5432
      CONS_POSTGRES_USER: tracker
      CONS_POSTGRES_PASSWORD: tracker
      CONS_POSTGRES_DB: tracker
      CONS_LOG_LEVEL: debug
  api:
    container_name: api
    depends_on:
      - kafka
      - postgres
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./api/:/app
    restart: on-failure
    environment:
      DEBUG: 1
      POSTGRES_USER: tracker
      POSTGRES_PASSWORD: tracker
      POSTGRES_DB: tracker
      POSTGRES_IP: postgres:5432
      KAFKA_IP: kafka:9092
      KAFKA_TOPIC: gps
  front:
    container_name: front
    build:
      context: ./tracker-front
      dockerfile: Dockerfile
    ports:
      - 80:1234


  producer1:
    container_name: producer1
    depends_on:
      - kafka
      - postgres
    restart: always
    build:
      context: ./kafka_producers
      dockerfile: Dockerfile
    environment:
      KAFKA_IP: kafka:9092
      KAFKA_TOPIC: gps
      CITY: Pau
      HOSTNAME: laptop1
      DELAY: 1
  producer2:
    container_name: producer2
    restart: always
    build:
      context: ./kafka_producers
      dockerfile: Dockerfile
    environment:
      KAFKA_IP: kafka:9092
      KAFKA_TOPIC: gps
      CITY: Paris
      HOSTNAME: laptop2
      DELAY: 10

volumes:
  kafka_data:
    driver: local
  postgres-data:
    driver: local
